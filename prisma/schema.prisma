generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model PersonalInformation {
  id             Int        @id @default(autoincrement())
  name           String
  title          String
  location       String
  phone          String
  email          String     @unique
  age            Int
  drivingLicense String
  languages      Language[]
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model Language {
  id                  Int                  @id @default(autoincrement())
  language            String
  proficiency         String
  personalInfoId      Int?
  PersonalInformation PersonalInformation? @relation(fields: [personalInfoId], references: [id])
}

model Experience {
  id        Int       @id @default(autoincrement())
  company   String
  city      String
  role      String
  tasks     String[]
  logo      String
  startDate DateTime
  endDate   DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Skill {
  id        Int      @id @default(autoincrement())
  type      String
  name      String   @unique
  icon      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  projects     Project[]      @relation("ProjectSkills")
  ProjectSkill ProjectSkill[]

  @@unique([type, name])
}

model Project {
  id           Int            @id @default(autoincrement())
  type         String
  name         String
  image        String
  description  String
  structure    String
  link         String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  skills       Skill[]        @relation("ProjectSkills")
  ProjectSkill ProjectSkill[]
}

model ProjectSkill {
  id        Int     @id @default(autoincrement())
  skillId   Int
  projectId Int
  skill     Skill   @relation(fields: [skillId], references: [id], onDelete: Cascade)
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@unique([skillId, projectId])
  @@index([skillId], name: "skillId_idx")
  @@index([projectId], name: "projectId_idx")
}

model Education {
  id          Int      @id @default(autoincrement())
  degree      String   @unique
  institution String
  details     String?
  dates       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Interest {
  id          Int      @id @default(autoincrement())
  type        String   @unique
  description String
  icon        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ContactMessage {
  id        Int      @id @default(autoincrement())
  name      String
  subject   String
  email     String
  message   String
  createdAt DateTime @default(now())
}
